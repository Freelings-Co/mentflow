name: Build and Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

# üîê Permiss√µes para conseguir dar push na branch de deploy
permissions:
  contents: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      # üîç Confere o que foi gerado (ajuste "dist" se seu build gerar outra pasta)
      - name: Verify build output
        run: |
          echo "Workspace:"
          ls -la
          echo "Build folder (dist):"
          ls -la dist || (echo "ERRO: pasta 'dist' n√£o existe. Ajuste o 'folder:' abaixo." && exit 1)

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Deploy to deploy-static branch
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          # ‚ö†Ô∏è Se seu build gerar 'build' (CRA) ou 'out' (next export), troque aqui:
          folder: dist
          branch: deploy-static
          # Evita conflitos de hist√≥rico e simplifica o push:
          single-commit: true
          clean: true
          # Esses excludes s√≥ fazem sentido se existirem na branch de deploy
          clean-exclude: |
            .git
            .github
            README.md
          commit-message: "Deploy: Atualiza√ß√£o autom√°tica via GitHub Actions [skip ci]"
          token: ${{ secrets.GITHUB_TOKEN }}
